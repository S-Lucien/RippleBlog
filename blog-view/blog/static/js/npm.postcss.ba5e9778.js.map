{"version":3,"sources":["webpack:///./node_modules/postcss/lib/previous-map.js","webpack:///./node_modules/postcss/lib/parse.js","webpack:///./node_modules/postcss/lib/map-generator.js","webpack:///./node_modules/postcss/lib/postcss.js","webpack:///./node_modules/postcss/lib/css-syntax-error.js","webpack:///./node_modules/postcss/lib/root.js","webpack:///./node_modules/postcss/lib/declaration.js","webpack:///./node_modules/postcss/lib/comment.js","webpack:///./node_modules/postcss/lib/processor.js","webpack:///./node_modules/postcss/lib/fromJSON.js","webpack:///./node_modules/postcss/lib/stringifier.js","webpack:///./node_modules/postcss/lib/warn-once.js","webpack:///./node_modules/postcss/lib/symbols.js","webpack:///./node_modules/postcss/lib/parser.js","webpack:///./node_modules/postcss/lib/list.js","webpack:///./node_modules/postcss/lib/input.js","webpack:///./node_modules/postcss/lib/lazy-result.js","webpack:///./node_modules/postcss/lib/at-rule.js","webpack:///./node_modules/postcss/lib/node.js","webpack:///./node_modules/postcss/lib/result.js","webpack:///./node_modules/postcss/lib/container.js","webpack:///./node_modules/postcss/lib/stringify.js","webpack:///./node_modules/postcss/lib/rule.js","webpack:///./node_modules/postcss/lib/tokenize.js","webpack:///./node_modules/postcss/node_modules/nanoid/non-secure/index.js","webpack:///./node_modules/postcss/lib/document.js","webpack:///./node_modules/postcss/lib/warning.js"],"names":["SourceMapConsumer","SourceMapGenerator","existsSync","readFileSync","dirname","join","PreviousMap","css","opts","map","this","loadAnnotation","inline","startWith","annotation","prev","undefined","text","loadMap","from","mapFile","root","consumerCache","consumer","sourcesContent","length","string","start","substr","sourceMapString","match","trim","annotations","lastAnnotation","getAnnotationURL","test","decodeURIComponent","RegExp","lastMatch","str","Buffer","toString","window","atob","encoding","Error","path","file","fromSourceMap","isMap","JSON","stringify","prevPath","loadFile","decodeInline","mappings","_mappings","Array","isArray","sections","module","exports","default","Container","Parser","Input","parse","input","parser","e","registerParse","resolve","relative","sep","pathToFileURL","sourceMapAvailable","Boolean","pathAvailable","mapOpts","previous","previousMaps","walk","node","source","includes","push","some","i","withContent","nodes","type","indexOf","removeChild","already","setSourceContent","toUrl","applySourceMap","isInline","btoa","unescape","encodeURIComponent","content","toBase64","to","outputFile","eol","generateString","isSourcesContent","setSourcesContent","applyPrevMaps","isAnnotation","addAnnotation","absolute","replace","encodeURI","lines","last","line","column","mapping","generated","original","sourcePath","addMapping","lastIndexOf","p","parent","raws","semicolon","end","clearAnnotation","generateMap","result","CssSyntaxError","Declaration","LazyResult","Processor","fromJSON","Document","Warning","Comment","AtRule","Result","list","Rule","Root","Node","postcss","plugins","plugin","name","initializer","creator","args","transformer","postcssPlugin","postcssVersion","version","cache","console","warn","LANG","startsWith","Object","defineProperty","get","process","processOpts","pluginOpts","comment","defaults","atRule","decl","rule","document","registerPostcss","red","bold","gray","options","colorette","terminalHighlight","message","super","reason","setMessage","captureStackTrace","color","enabled","mark","aside","split","Math","max","min","maxWidth","String","slice","index","number","gutter","spacing","code","showSourceCode","child","ignore","before","sample","normalize","first","registerLazyResult","dependant","registerProcessor","value","prop","concat","stringifier","syntax","hideNothingWarning","normalized","json","inputs","n","ownInputs","inputHydrated","__proto__","prototype","inputId","DEFAULT_RAW","colon","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","after","emptyBody","commentLeft","commentRight","builder","body","left","raw","right","between","rawValue","important","block","ownSemicolon","params","afterName","own","detect","rawCache","beforeAfter","method","toUpperCase","parts","walkComments","walkDecls","buf","depth","step","printed","isClean","Symbol","my","tokenizer","current","spaces","customProperty","createTokenizer","offset","token","endOfFile","nextToken","freeSemicolon","atrule","emptyRule","other","endFile","init","getPosition","selector","bracket","brackets","tokens","back","pop","unclosedBracket","unknownWord","spacesAndCommentsFromEnd","shift","firstSpaces","spacesAndCommentsFromStart","precheckMissedSemicolon","toLowerCase","stringFrom","spacesFromEnd","j","hasWord","checkMissedSemicolon","unnamedAtrule","open","unexpectedClose","unclosedBlock","pos","fromOffset","col","next","clean","pattern","reduce","all","lastTokenType","splice","element","entries","doubleColon","error","founded","separators","array","func","quote","escape","letter","space","comma","fileURLToPath","isAbsolute","nanoid","fromOffsetCache","hasBOM","mapResolve","id","lastLine","lineToIndex","prevIndex","l","mid","origin","url","fromUrl","originalPositionFor","URL","sourceRoot","protocol","sourceContentFor","registerInput","MapGenerator","TYPE_TO_CLASS_NAME","PLUGIN_PROPS","prepare","Once","DeclarationExit","RuleExit","AtRuleExit","CommentExit","RootExit","DocumentExit","OnceExit","NOT_VISITORS","isPromise","obj","then","getEvents","key","append","toStack","events","eventIndex","visitors","visitorIndex","iterator","cleanMarks","forEach","processor","stringified","processed","rebuild","helpers","toStringTag","sync","messages","warnings","onFulfilled","onRejected","async","catch","onFinally","Promise","reject","processing","runAsync","getAsyncError","runOnRoot","prepareVisitors","hasListener","walkSync","listeners","subRoot","visitSync","data","generate","event","each","toProxy","visitor","promise","lastPlugin","handleError","proxyOf","roots","addToError","err","stack","visitTick","add","cb","filter","keys","visit","indexes","getIterator","children","prepend","registerAtRule","Stringifier","clone","positionBy","overrides","cloned","cloneNode","constructor","hasOwnProperty","call","insertBefore","insertAfter","bookmark","foundSelf","remove","defaultType","keepBetween","_","fixed","emitInputs","Map","inputsNextIndex","toJSON","set","positionInside","word","markDirty","proxyCache","Proxy","getProxyProcessor","postcssNode","s","warning","callback","reverse","unshift","cleanRaws","exist","props","fast","condition","every","cleanSource","markDirtyUp","lastEach","registerRule","setPrototypeOf","values","SINGLE_QUOTE","charCodeAt","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","escaped","escapePos","currentToken","valueOf","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","fromCharCode","lastIndex","charAt","position","customAlphabet","alphabet","size","random","opt"],"mappings":"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","file":"static/js/npm.postcss.ba5e9778.js","sourcesContent":["'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    // istanbul ignore next\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString\n      .match(/\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\//)[1]\n      .trim()\n  }\n\n  loadAnnotation(css) {\n    let annotations = css.match(\n      /\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\//gm\n    )\n\n    if (annotations && annotations.length > 0) {\n      // Locate the last sourceMappingURL to avoid picking up\n      // sourceMappingURLs from comments, strings, etc.\n      let lastAnnotation = annotations[annotations.length - 1]\n      if (lastAnnotation) {\n        this.annotation = this.getAnnotationURL(lastAnnotation)\n      }\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      this.root.walk(node => {\n        if (node.source && node.source.input.map) {\n          let map = node.source.input.map\n          if (!this.previousMaps.includes(map)) {\n            this.previousMaps.push(map)\n          }\n        }\n      })\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    let node\n    for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n      node = this.root.nodes[i]\n      if (node.type !== 'comment') continue\n      if (node.text.indexOf('# sourceMappingURL=') === 0) {\n        this.root.removeChild(i)\n      }\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    this.root.walk(node => {\n      if (node.source) {\n        let from = node.source.input.from\n        if (from && !already[from]) {\n          already[from] = true\n          this.map.setSourceContent(\n            this.toUrl(this.path(from)),\n            node.source.input.css\n          )\n        }\n      }\n    })\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      // istanbul ignore next\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    }\n    if (this.opts.from) {\n      return this.path(this.opts.from)\n    }\n    return 'to.css'\n  }\n\n  generateMap() {\n    this.generateString()\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    }\n    return [this.css, this.map]\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      // istanbul ignore next\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.mapOpts.absolute) {\n      if (pathToFileURL) {\n        return pathToFileURL(node.source.input.from).toString()\n      } else {\n        // istanbul ignore next\n        throw new Error(\n          '`map.absolute` option is not available in this PostCSS build'\n        )\n      }\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    }\n\n    let result = ''\n    this.stringify(this.root, i => {\n      result += i\n    })\n    return [result]\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  if (console && console.warn) {\n    console.warn(\n      name +\n        ': postcss.plugin was deprecated. Migration guide:\\n' +\n        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n    )\n    if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n      // istanbul ignore next\n      console.warn(\n        name +\n          ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n          'https://www.w3ctech.com/topic/2226'\n      )\n    }\n  }\n  function creator(...args) {\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { red, bold, gray, options: colorette } = require('colorette')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      this.line = line\n      this.column = column\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = colorette.enabled\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.3.5'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined' &&\n      !opts.hideNothingWarning\n    ) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(\n            'You did not set any plugins, parser, or stringifier. ' +\n              'Right now, PostCSS does nothing. Pick plugins for your case ' +\n              'on https://www.postcss.parts/ and use them in postcss.config.js.'\n          )\n        }\n      }\n    }\n    return new LazyResult(this, css, opts)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* istanbul ignore if */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\n","'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      while (tokens.length) {\n        token = tokens[tokens.length - 1][0]\n        if (token !== 'space' && token !== 'comment') break\n        this.tokenizer.back(tokens.pop())\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n    node.source.end = this.getPosition(last[3] || last[2])\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n    let firstSpaces = this.spacesAndCommentsFromStart(tokens)\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n    this.raw(node, 'value', tokens)\n    if (hasWord) {\n      node.raws.between += firstSpaces\n    } else {\n      node.value = firstSpaces + node.value\n    }\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n    let pattern = /^([#.|])?(\\w)+/i\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n\n      if (type === 'comment' && node.type === 'rule') {\n        prev = tokens[i - 1]\n        next = tokens[i + 1]\n\n        if (\n          prev[0] !== 'space' &&\n          next[0] !== 'space' &&\n          pattern.test(prev[1]) &&\n          pattern.test(next[1])\n        ) {\n          value += token[1]\n        } else {\n          clean = false\n        }\n\n        continue\n      }\n\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\n        clean = false\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error('Unclosed bracket', bracket[2])\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error('Unknown word', tokens[0][2])\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error('Unexpected }', token[2])\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error('Double colon', token[2])\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error('At-rule without name', token[2])\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    throw this.input.error('Missed semicolon', token[2])\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let quote = false\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (quote) {\n        if (letter === quote) {\n          quote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        quote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result\n    if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n    let origin = this.origin(line, column)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.line,\n        origin.column,\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        line,\n        column,\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        // istanbul ignore next\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        // istanbul ignore next\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      // istanbul ignore next\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      // istanbul ignore next\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let pos = this.positionBy(opts)\n      return this.source.input.error(message, pos.line, pos.column, opts)\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        // istanbul ignore next\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    exist = this.index(exist)\n\n    let type = exist === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    exist = this.index(exist)\n\n    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse()\n    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (exist < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      // istanbul ignore next\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n// istanbul ignore next\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let pos = opts.node.positionBy(opts)\n      this.line = pos.line\n      this.column = pos.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n"],"sourceRoot":""}